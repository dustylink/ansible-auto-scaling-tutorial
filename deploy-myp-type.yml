---
# deploy-myp-type.yml

- name: Find existing instance(s)
  hosts: "tag_Name_ami_build_{{ myp_type }}_{{ myp_env }}" # tag_Name matches '-' with '_'
  gather_facts: false
  tags: find
  tasks:
    - name: Add to old_ami_build_{{ myp_type }}_{{ myp_env }} group
      group_by:
        key: "old_ami_build_{{ myp_type }}_{{ myp_env }}" #creates ansible group

- name: Launch new myp_type
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - role: launch-role
      name: "ami-build-{{ myp_type }}-{{ myp_env }}"

- name: Provision new myp_type
  hosts: "ami-build-{{ myp_type }}-{{ myp_env }}" #ansible group created by role: launch-role
  roles:
    - { role: motd, become: yes }
    - setup-{{ myp_type }}

- name: Provision new myp_type supporting infra
  hosts: "ami-build-{{ myp_type }}-{{ myp_env }}" #ansible group created by role: launch-role
  connection: local
  gather_facts: yes
  vars:
    name: "ami-build-{{ myp_type }}-{{ myp_env }}"
  roles:
    - build-ami
#    - create-launch-configuration
    - load-balancer
#    - auto-scaling
    - dns

- name: clean up old AMIs and LCs
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    name: "ami-build-{{ myp_type }}-{{ myp_env }}"
  roles:
    - delete-old-amis
#    - delete-old-launch-configurations

- name: clean up old builders for this playbook
  hosts: "old_ami_build_{{ myp_type }}_{{ myp_env }}" #ansible group created by play: Find existing instance(s)
  connection: local
  gather_facts: false
  roles:
    - terminate
